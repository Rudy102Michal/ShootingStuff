[gd_scene load_steps=44 format=2]

[ext_resource path="res://materials/noisetexture.tres" type="Texture" id=1]

[sub_resource type="CylinderMesh" id=1]
top_radius = 0.1
bottom_radius = 0.1
radial_segments = 32
rings = 20

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 4

[sub_resource type="VisualShaderNodeScalarOp" id=3]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 4

[sub_resource type="VisualShaderNodeInput" id=4]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=5]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarFunc" id=6]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=8]
operator = 4

[sub_resource type="VisualShaderNodeScalarFunc" id=9]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 0.0, 1, 0.03 ]

[sub_resource type="VisualShaderNodeScalarOp" id=11]
default_input_values = [ 0, 0.0, 1, 0.8 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=12]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=13]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=14]

[sub_resource type="VisualShaderNodeVectorCompose" id=15]

[sub_resource type="VisualShaderNodeInput" id=16]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=17]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 4

[sub_resource type="VisualShaderNodeScalarOp" id=18]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=20]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=21]

[sub_resource type="VisualShaderNodeVectorCompose" id=22]

[sub_resource type="VisualShaderNodeScalarFunc" id=23]
function = 16

[sub_resource type="VisualShaderNodeScalarOp" id=24]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 4

[sub_resource type="VisualShaderNodeVectorDecompose" id=25]

[sub_resource type="VisualShaderNodeVectorCompose" id=26]

[sub_resource type="VisualShaderNodeScalarOp" id=27]

[sub_resource type="VisualShaderNodeInput" id=28]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=29]

[sub_resource type="VisualShaderNodeScalarFunc" id=30]
function = 12

[sub_resource type="VisualShaderNodeScalarFunc" id=31]
function = 12

[sub_resource type="VisualShaderNodeScalarOp" id=32]

[sub_resource type="VisualShaderNodeScalarOp" id=33]

[sub_resource type="VisualShaderNodeTexture" id=34]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=35]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=36]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=37]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=38]
default_input_values = [ 0, 0.0, 1, 0.25 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=39]
input_name = "vertex"

[sub_resource type="VisualShaderNodeScalarUniform" id=40]
uniform_name = "BoltLength"

[sub_resource type="VisualShader" id=41]
code = "shader_type spatial;
uniform sampler2D tex_frg_3;


void vertex() {
// Konsola:0

}

void fragment() {
// Wejście:2
	vec3 n_out2p0;
	n_out2p0 = vec3(UV,0.0);

// VectorDecompose:4
	float n_out4p0;
	float n_out4p1;
	float n_out4p2;
	n_out4p0 = n_out2p0.x;
	n_out4p1 = n_out2p0.y;
	n_out4p2 = n_out2p0.z;

// Wejście:6
	float n_out6p0;
	n_out6p0 = TIME;

// ScalarOp:19
	float n_in19p1 = 0.80000;
	float n_out19p0;
	n_out19p0 = n_out6p0 * n_in19p1;

// ScalarOp:7
	float n_in7p1 = 1.00000;
	float n_out7p0;
	n_out7p0 = mod( n_out19p0 , n_in7p1 );

// ScalarOp:8
	float n_out8p0;
	n_out8p0 = n_out4p0 + n_out7p0;

// ScalarOp:11
	float n_in11p1 = 1.00000;
	float n_out11p0;
	n_out11p0 = mod( n_out8p0 , n_in11p1 );

// ScalarOp:9
	float n_out9p0;
	n_out9p0 = n_out4p1 + n_out7p0;

// ScalarOp:10
	float n_in10p1 = 1.00000;
	float n_out10p0;
	n_out10p0 = mod( n_out9p0 , n_in10p1 );

// VectorCompose:5
	vec3 n_out5p0;
	n_out5p0 = vec3( n_out11p0 , n_out10p0 , n_out4p2 );

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	vec4 tex_frg_3_read = texture( tex_frg_3 , n_out5p0.xy );
	n_out3p0 = tex_frg_3_read.rgb;
	n_out3p1 = tex_frg_3_read.a;

// ScalarOp:18
	float n_in18p1 = 0.03000;
	float n_out18p0;
	n_out18p0 = dot(n_out3p0,vec3(0.333333,0.333333,0.333333)) + n_in18p1;

// ScalarFunc:17
	float n_out17p0;
	n_out17p0 = round(n_out18p0);

// Konsola:0
	ALPHA = n_out17p0;

}

void light() {
// Konsola:0

}
"
graph_offset = Vector2( -589.899, 601 )
nodes/vertex/0/position = Vector2( 1240, 60 )
nodes/vertex/2/node = SubResource( 28 )
nodes/vertex/2/position = Vector2( -540, 260 )
nodes/vertex/3/node = SubResource( 34 )
nodes/vertex/3/position = Vector2( 520, 360 )
nodes/vertex/4/node = SubResource( 35 )
nodes/vertex/4/position = Vector2( -440, 620 )
nodes/vertex/5/node = SubResource( 36 )
nodes/vertex/5/position = Vector2( -400, 260 )
nodes/vertex/6/node = SubResource( 37 )
nodes/vertex/6/position = Vector2( -240, 260 )
nodes/vertex/7/node = SubResource( 38 )
nodes/vertex/7/position = Vector2( -80, 260 )
nodes/vertex/8/node = SubResource( 39 )
nodes/vertex/8/position = Vector2( -280, 120 )
nodes/vertex/9/node = SubResource( 40 )
nodes/vertex/9/position = Vector2( -120, 40 )
nodes/vertex/10/node = SubResource( 20 )
nodes/vertex/10/position = Vector2( 160, 20 )
nodes/vertex/11/node = SubResource( 21 )
nodes/vertex/11/position = Vector2( -80, 120 )
nodes/vertex/12/node = SubResource( 22 )
nodes/vertex/12/position = Vector2( 1040, 60 )
nodes/vertex/13/node = SubResource( 23 )
nodes/vertex/13/position = Vector2( -520, 440 )
nodes/vertex/14/node = SubResource( 24 )
nodes/vertex/14/position = Vector2( -300, 440 )
nodes/vertex/17/node = SubResource( 25 )
nodes/vertex/17/position = Vector2( 680, 460 )
nodes/vertex/18/node = SubResource( 26 )
nodes/vertex/18/position = Vector2( 520, 260 )
nodes/vertex/19/node = SubResource( 27 )
nodes/vertex/19/position = Vector2( 160, 240 )
nodes/vertex/20/node = SubResource( 29 )
nodes/vertex/20/position = Vector2( 160, 360 )
nodes/vertex/21/node = SubResource( 30 )
nodes/vertex/21/position = Vector2( 340, 260 )
nodes/vertex/22/node = SubResource( 31 )
nodes/vertex/22/position = Vector2( 320, 340 )
nodes/vertex/23/node = SubResource( 32 )
nodes/vertex/23/position = Vector2( 740, 160 )
nodes/vertex/24/node = SubResource( 33 )
nodes/vertex/24/position = Vector2( 840, 260 )
nodes/vertex/connections = PoolIntArray( 5, 0, 6, 0, 6, 0, 7, 0, 9, 0, 10, 0, 8, 0, 11, 0, 11, 1, 10, 1, 10, 0, 12, 1, 2, 0, 14, 0, 2, 0, 5, 0, 3, 0, 17, 0, 18, 0, 3, 0, 19, 0, 21, 0, 21, 0, 18, 0, 20, 0, 22, 0, 11, 0, 23, 0, 23, 0, 12, 0, 17, 0, 23, 1, 11, 2, 24, 0, 17, 2, 24, 1, 24, 0, 12, 2, 11, 1, 19, 0, 11, 1, 20, 0, 14, 0, 20, 1, 14, 0, 19, 1, 22, 0, 18, 1 )
nodes/fragment/0/position = Vector2( 1460, 480 )
nodes/fragment/2/node = SubResource( 12 )
nodes/fragment/2/position = Vector2( -420, 540 )
nodes/fragment/3/node = SubResource( 13 )
nodes/fragment/3/position = Vector2( 720, 460 )
nodes/fragment/4/node = SubResource( 14 )
nodes/fragment/4/position = Vector2( -260, 540 )
nodes/fragment/5/node = SubResource( 15 )
nodes/fragment/5/position = Vector2( 520, 480 )
nodes/fragment/6/node = SubResource( 16 )
nodes/fragment/6/position = Vector2( -520, 700 )
nodes/fragment/7/node = SubResource( 17 )
nodes/fragment/7/position = Vector2( -140, 680 )
nodes/fragment/8/node = SubResource( 18 )
nodes/fragment/8/position = Vector2( 20, 480 )
nodes/fragment/9/node = SubResource( 19 )
nodes/fragment/9/position = Vector2( 60, 620 )
nodes/fragment/10/node = SubResource( 2 )
nodes/fragment/10/position = Vector2( 240, 600 )
nodes/fragment/11/node = SubResource( 3 )
nodes/fragment/11/position = Vector2( 240, 460 )
nodes/fragment/12/node = SubResource( 4 )
nodes/fragment/12/position = Vector2( -500, 860 )
nodes/fragment/13/node = SubResource( 5 )
nodes/fragment/13/position = Vector2( -80, 860 )
nodes/fragment/14/node = SubResource( 6 )
nodes/fragment/14/position = Vector2( 160, 860 )
nodes/fragment/15/node = SubResource( 7 )
nodes/fragment/15/position = Vector2( -520, 1060 )
nodes/fragment/16/node = SubResource( 8 )
nodes/fragment/16/position = Vector2( -360, 1040 )
nodes/fragment/17/node = SubResource( 9 )
nodes/fragment/17/position = Vector2( 1200, 500 )
nodes/fragment/18/node = SubResource( 10 )
nodes/fragment/18/position = Vector2( 940, 520 )
nodes/fragment/19/node = SubResource( 11 )
nodes/fragment/19/position = Vector2( -340, 700 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 0, 5, 0, 3, 0, 4, 2, 5, 2, 4, 0, 8, 0, 7, 0, 8, 1, 7, 0, 9, 1, 4, 1, 9, 0, 9, 0, 10, 0, 8, 0, 11, 0, 11, 0, 5, 0, 10, 0, 5, 1, 12, 0, 13, 0, 13, 0, 14, 0, 15, 0, 16, 0, 17, 0, 0, 1, 3, 0, 18, 0, 18, 0, 17, 0, 6, 0, 19, 0, 19, 0, 7, 0 )

[sub_resource type="ShaderMaterial" id=42]
shader = SubResource( 41 )

[node name="ElectricBolt" type="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="."]
cast_shadow = 0
mesh = SubResource( 1 )
material/0 = SubResource( 42 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, 0.729663, 0.683807, 0, -0.683807, 0.729663, 0, 3.96594, 4.0482 )

[node name="DirectionalLight2" type="DirectionalLight" parent="."]
transform = Transform( -0.823399, -0.388035, 0.414057, 0, 0.729663, 0.683807, -0.567463, 0.563046, -0.600804, 2.68655, 3.96594, -3.61551 )
